/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package logindemo;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Image;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStream;
import java.math.BigDecimal;
import java.sql.*;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.*;

/**
 *
 * @author kirkalvinawat
 */
public class DatabaseForm extends javax.swing.JFrame {
 Connection con = javaconnect.connectdb();
 PreparedStatement ps = null;
 ResultSet rs= null ;
 Boolean newClick = false;
 Boolean updateClick = false;
 String imgPath; 
 int userID;
 boolean withPic;
 String currentUsername;
 
    public DatabaseForm() throws SQLException {
        initComponents();
        populateJTable();
        this.setLocationRelativeTo(null);
        //javaconnect.connectdb();
    }
    
    public DatabaseForm(int pass) throws SQLException {
        initComponents();
        userID = pass;
        getPic();
        populateJTable();
        this.setLocationRelativeTo(null);
        //javaconnect.connectdb();
    }
    
    public ArrayList<customer> customerList(){
        ArrayList<customer> clist = new ArrayList<customer>();
        
        Connection con = javaconnect.connectdb();
        Statement st;
        ResultSet rs;
        
     try {
         st = con.createStatement();
         rs = st.executeQuery("SELECT USER_ID, USERNAME, PASSWORD, FIRST_NAME, LAST_NAME, PICTURE FROM LOGINTABLE ORDER BY USER_ID");
         
         customer cs;
        while(rs.next()){
            cs = new customer(rs.getInt("USER_ID"), 
                               rs.getString("USERNAME"),
                               rs.getString("PASSWORD"),
                               rs.getString("FIRST_NAME"), 
                               rs.getString("LAST_NAME"), 
                               rs.getBytes("PICTURE"));
            
            clist.add(cs);
        }
     } catch (SQLException ex) {
         Logger.getLogger(DatabaseForm.class.getName()).log(Level.SEVERE, null, ex);
     }
        return clist;
    }
    
    public void populateJTable(){
        ArrayList<customer> cslist = customerList();
        
        String[] colNames = {"User ID", "Username", "Password", "First Name", "Last Name", "Picture"};
        Object[][] rows = new Object[cslist.size()][6];
        
        for(int i=0; i<cslist.size(); i++){
            rows[i][0] = cslist.get(i).getUserID();
            rows[i][1] = cslist.get(i).getUserName();
            rows[i][2] = cslist.get(i).getPassword();
            rows[i][3] = cslist.get(i).getFirstName();
            rows[i][4] = cslist.get(i).getLastName();
            
            ImageIcon pic = new ImageIcon 
            (new ImageIcon(cslist.get(i).getPicture()).getImage().getScaledInstance(100, 100, Image.SCALE_SMOOTH));
            rows[i][5] = pic;
        }
        MyModel mmd = new MyModel(colNames, rows);
        jTable1.setModel(mmd);
        jTable1.setRowHeight(70);
        jTable1.getColumnModel().getColumn(5).setPreferredWidth(70);
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(JLabel.CENTER);
        jTable1.setDefaultRenderer(Integer.class, centerRenderer);
        jTable1.setDefaultRenderer(String.class, centerRenderer);
        
        jTable1.getTableHeader().setBackground(new Color(240,142,142));
        jTable1.getTableHeader().setForeground(Color.WHITE);
        jTable1.getTableHeader().setPreferredSize(new Dimension(40,40));
        jTable1.getTableHeader().setFont(new Font("Arial", Font.BOLD, 15));
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        saveBtn = new javax.swing.JButton();
        userNameText = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        firstNameText = new javax.swing.JTextField();
        lastNameText = new javax.swing.JTextField();
        newBtn = new javax.swing.JButton();
        updateBtn = new javax.swing.JButton();
        cancelBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        deleteBtn = new javax.swing.JButton();
        trans = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        pictureViewer = new javax.swing.JLabel();
        editPic = new javax.swing.JButton();
        jPasswordField1 = new javax.swing.JPasswordField();
        jLabel5 = new javax.swing.JLabel();
        returnBtn = new javax.swing.JButton();
        minimizeButton = new javax.swing.JLabel();
        exitButton = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 153, 153));
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(240, 142, 142));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Username:");

        saveBtn.setBackground(new java.awt.Color(240, 142, 142));
        saveBtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        saveBtn.setText("Save");
        saveBtn.setEnabled(false);
        saveBtn.setMaximumSize(new java.awt.Dimension(67, 23));
        saveBtn.setMinimumSize(new java.awt.Dimension(67, 23));
        saveBtn.setPreferredSize(new java.awt.Dimension(67, 23));
        saveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBtnActionPerformed(evt);
            }
        });

        userNameText.setDisabledTextColor(new java.awt.Color(51, 51, 51));
        userNameText.setEnabled(false);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("First Name: ");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Last Name:");

        firstNameText.setDisabledTextColor(new java.awt.Color(51, 51, 51));
        firstNameText.setEnabled(false);

        lastNameText.setDisabledTextColor(new java.awt.Color(51, 51, 51));
        lastNameText.setEnabled(false);

        newBtn.setBackground(new java.awt.Color(240, 142, 142));
        newBtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        newBtn.setText("New");
        newBtn.setEnabled(true);
        newBtn.setMaximumSize(new java.awt.Dimension(67, 23));
        newBtn.setMinimumSize(new java.awt.Dimension(67, 23));
        newBtn.setPreferredSize(new java.awt.Dimension(67, 23));
        newBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newBtnActionPerformed(evt);
            }
        });

        updateBtn.setBackground(new java.awt.Color(240, 142, 142));
        updateBtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        updateBtn.setText("Update");
        updateBtn.setEnabled(false);
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });

        cancelBtn.setBackground(new java.awt.Color(240, 142, 142));
        cancelBtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        cancelBtn.setText("Cancel");
        cancelBtn.setEnabled(false);
        cancelBtn.setMaximumSize(new java.awt.Dimension(67, 23));
        cancelBtn.setMinimumSize(new java.awt.Dimension(67, 23));
        cancelBtn.setPreferredSize(new java.awt.Dimension(67, 23));
        cancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBtnActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Customer Credentials");

        deleteBtn.setBackground(new java.awt.Color(240, 142, 142));
        deleteBtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        deleteBtn.setText("Delete");
        deleteBtn.setEnabled(false);
        deleteBtn.setMaximumSize(new java.awt.Dimension(67, 23));
        deleteBtn.setMinimumSize(new java.awt.Dimension(67, 23));
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        trans.setBackground(new java.awt.Color(240, 142, 142));
        trans.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        trans.setText("Transactions");
        trans.setEnabled(false);
        trans.setPreferredSize(new java.awt.Dimension(57, 23));
        trans.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Username", "Password", "User ID"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        pictureViewer.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        pictureViewer.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(240, 142, 142)));

        editPic.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        editPic.setText("Edit Picture");
        editPic.setEnabled(false);
        editPic.setMaximumSize(new java.awt.Dimension(67, 23));
        editPic.setMinimumSize(new java.awt.Dimension(67, 23));
        editPic.setPreferredSize(new java.awt.Dimension(67, 23));
        editPic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editPicActionPerformed(evt);
            }
        });

        jPasswordField1.setEnabled(false);
        jPasswordField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPasswordField1ActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("Password:");

        returnBtn.setBackground(new java.awt.Color(240, 142, 142));
        returnBtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        returnBtn.setText("Return to Log in Page");
        returnBtn.setMaximumSize(new java.awt.Dimension(67, 23));
        returnBtn.setMinimumSize(new java.awt.Dimension(67, 23));
        returnBtn.setPreferredSize(new java.awt.Dimension(67, 23));
        returnBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(56, 56, 56)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(103, 103, 103)
                                .addComponent(pictureViewer, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel3)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel5))
                                        .addGap(20, 20, 20)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(userNameText, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lastNameText, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(firstNameText, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(editPic, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(cancelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(saveBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(newBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(updateBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(trans, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(deleteBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(returnBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 559, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pictureViewer, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(editPic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(firstNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lastNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(userNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(updateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(newBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(saveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(deleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cancelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(trans, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(returnBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 3, Short.MAX_VALUE)))
                .addGap(21, 21, 21))
        );

        minimizeButton.setFont(new java.awt.Font("Tahoma", 1, 19)); // NOI18N
        minimizeButton.setForeground(new java.awt.Color(255, 255, 255));
        minimizeButton.setText("_");
        minimizeButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                minimizeButtonMouseClicked(evt);
            }
        });

        exitButton.setFont(new java.awt.Font("Tahoma", 1, 19)); // NOI18N
        exitButton.setForeground(new java.awt.Color(255, 255, 255));
        exitButton.setText("X");
        exitButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exitButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(minimizeButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(exitButton)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(exitButton)
                    .addComponent(minimizeButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    public boolean verifData(){
        if(firstNameText.getText().equals("") || lastNameText.getText().equals("") || userNameText.getText().equals("") ||
                jPasswordField1.getText().equals("")){
            
            JOptionPane.showMessageDialog(null, "Registration Error! Make sure all the fields are not empty.");
            return false;
        }
        else if(imgPath==null){
            JOptionPane.showMessageDialog(null, "Registration Error! No image were selected.");
            return false;
        }else{
            return true;
        }
    }
    
    private void saveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBtnActionPerformed
        if (newClick==true) 
       {
        Connection newCon = javaconnect.connectdb();
        if(verifData()){
            try{
                newCon = javaconnect.connectdb();
                String Query = "INSERT INTO LOGINTABLE (USER_ID, USERNAME, PASSWORD, FIRST_NAME, LAST_NAME, PICTURE) values (USER_ID_SEQ.NEXTVAL, ?, ?, ?, ?, ?)";
                ps = newCon.prepareStatement(Query);

                ps.setString(1, userNameText.getText());
                ps.setString(2, String.valueOf(jPasswordField1.getPassword()));
                ps.setString(3, firstNameText.getText());
                ps.setString(4, lastNameText.getText());

                InputStream img = new FileInputStream(new File(imgPath));
                ps.setBlob(5, img);

                    if(ps.executeUpdate() != 0){
                    JOptionPane.showMessageDialog(null, "New Member Added");
                    }
                    else{
                    JOptionPane.showMessageDialog(null, "Sorry! Something went wrong.");
                    }
                
                newCon.close();
            }
            catch (java.sql.SQLIntegrityConstraintViolationException e){
                JOptionPane.showMessageDialog(null, "Error: The username is already taken.");
            }
            catch (Exception e){
                JOptionPane.showMessageDialog(null, "Error SQL:"+e);
            }
            
        }
        
        newClick=false;
       }
       
       if (updateClick==true)
       {
        Connection updateCon = javaconnect.connectdb();
        if(verifData()){
            try{
                
                String Query = "";
                
                if(withPic){
                    Query = "UPDATE LOGINTABLE SET USERNAME=?, PASSWORD=?, FIRST_NAME=?, LAST_NAME=?, PICTURE=? WHERE USER_ID=?";
                    
                ps = updateCon.prepareStatement(Query);

                ps.setString(1, userNameText.getText());
                ps.setString(2, String.valueOf(jPasswordField1.getPassword()));
                ps.setString(3, firstNameText.getText());
                ps.setString(4, lastNameText.getText());

                InputStream img = new FileInputStream(new File(imgPath));
                ps.setBlob(5, img);
                ps.setInt(6, userID);

                    if(ps.executeUpdate() != 0){
                    JOptionPane.showMessageDialog(null, "Customer Updated!");
                    }
                    else{
                    JOptionPane.showMessageDialog(null, "Sorry! Something went wrong.");
                    }
                
                updateCon.close();
                
                }else{
                Query = "UPDATE LOGINTABLE SET USERNAME=?, PASSWORD=?, FIRST_NAME=?, LAST_NAME=? WHERE USER_ID=?";
                
                ps = con.prepareStatement(Query);
                ps.setString(1, userNameText.getText());
                ps.setString(2, String.valueOf(jPasswordField1.getPassword()));
                ps.setString(3, firstNameText.getText());
                ps.setString(4, lastNameText.getText());
                ps.setInt(5, userID);

                    if(ps.executeUpdate() != 0){
                    JOptionPane.showMessageDialog(null, "Contact Updated!");
                    }
                    else{
                    JOptionPane.showMessageDialog(null, "Sorry! Something went wrong.");
                    }
                
                    updateCon.close();
                }            
            }
            catch (java.sql.SQLIntegrityConstraintViolationException e){
                JOptionPane.showMessageDialog(null, "Error: The username is already taken.");
            }
            catch (Exception e){
                JOptionPane.showMessageDialog(null, "Error SQL:"+e);
            }
          }
      updateClick =false;
       }
      populateJTable();
      jPasswordField1.setText("***");
    }//GEN-LAST:event_saveBtnActionPerformed

    public void getPic(){
        try{
            String login = "SELECT PICTURE FROM logintable WHERE USER_ID=?";
            ps = con.prepareStatement(login);
            ps.setInt(1, userID);
            rs = ps.executeQuery();
            if(rs.next()){
                pictureViewer.setIcon(new imageHandler().resizePic(null, rs.getBytes("PICTURE"), pictureViewer.getWidth(), pictureViewer.getHeight()));
            }else{
                JOptionPane.showMessageDialog(null, "Trouble loading the image.");
            }
        }
        catch(SQLException ex){
            JOptionPane.showMessageDialog(null, ex);
        }
    }
  
    
    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
       newClick = false;
       firstNameText.setEnabled(false);
       lastNameText.setEnabled(false);
       userNameText.setEnabled(false);
       jPasswordField1.setEnabled(false);
       trans.setEnabled(true);
       editPic.setEnabled(false);
       
       deleteBtn.setEnabled(true);
       updateBtn.setEnabled(true);
       newBtn.setEnabled(true);
       saveBtn.setEnabled(false);
       cancelBtn.setEnabled(false);
       
       int rowIndex = jTable1.getSelectedRow();
       firstNameText.setText(jTable1.getValueAt(rowIndex, 3).toString());
       lastNameText.setText(jTable1.getValueAt(rowIndex, 4).toString());
       jPasswordField1.setText(jTable1.getValueAt(rowIndex, 2).toString());
       userNameText.setText(jTable1.getValueAt(rowIndex, 1).toString());
       userID = Integer.parseInt(jTable1.getValueAt(rowIndex, 0).toString()); 
       
       Image pic = ((ImageIcon)jTable1.getValueAt(rowIndex, 5)).getImage()
               .getScaledInstance(pictureViewer.getWidth(), pictureViewer.getHeight(), Image.SCALE_SMOOTH);
       ImageIcon img = new ImageIcon(pic);
       pictureViewer.setIcon(img);
    }//GEN-LAST:event_jTable1MouseClicked

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
        imgPath = "";    
        firstNameText.setEnabled(true);
        lastNameText.setEnabled(true);
        userNameText.setEnabled(true);
        jPasswordField1.setEnabled(true);
        editPic.setEnabled(true);
        newBtn.setEnabled(false);
        saveBtn.setEnabled(true);
        updateBtn.setEnabled(false);
        cancelBtn.setEnabled(true);
        deleteBtn.setEnabled(false);
        trans.setEnabled(false);
        updateClick = true;
    }//GEN-LAST:event_updateBtnActionPerformed

    private void cancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBtnActionPerformed
        firstNameText.setEnabled(false);
        lastNameText.setEnabled(false);
        userNameText.setEnabled(false);
        editPic.setEnabled(false);
        jPasswordField1.setEnabled(false);
        pictureViewer.setIcon(null);
        pictureViewer.setText("No Image Selected");
        firstNameText.setText("");
        lastNameText.setText("");
        userNameText.setText("");
        jPasswordField1.setText("");
        
        jTable1.clearSelection();
        
        updateBtn.setEnabled(false);
        cancelBtn.setEnabled(false);
        deleteBtn.setEnabled(false);
        newBtn.setEnabled(true);
        saveBtn.setEnabled(false);
    }//GEN-LAST:event_cancelBtnActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
            try{
            con = javaconnect.connectdb();
            Statement stmt = con.createStatement();
            String Query = "DELETE FROM LOGINTABLE WHERE USER_ID='"+ userID +"'";        
                //JOptionPane.showMessageDialog(null, Query);
            int dialogButton = JOptionPane.YES_NO_OPTION;
            JOptionPane.showConfirmDialog(null, "Are you sure to delete this record?","WARNING",dialogButton);
            if(dialogButton == JOptionPane.YES_OPTION) {              
               stmt.executeUpdate(Query);
               firstNameText.setText("");
               lastNameText.setText("");
               userNameText.setText("");
               jPasswordField1.setText("");
               pictureViewer.setIcon(null);
               pictureViewer.setText("No Image Selected");
               jTable1.setRowSelectionInterval(0, 0);
               stmt.close();
               Statement stmt1 = con.createStatement();
               Query = "DELETE FROM TRANSACTIONS WHERE USER_ID='"+ userID +"'";
               stmt1.executeUpdate(Query);
               
               Statement stmt2 = con.createStatement();
               Query = "DELETE FROM ORDER_ITEMS WHERE USER_ID='"+ userID +"'";
               stmt2.executeUpdate(Query);
               
               populateJTable();
            }
        }
        catch (SQLException e){JOptionPane.showMessageDialog(null, "Error SQL:"+e);}
    }//GEN-LAST:event_deleteBtnActionPerformed

    private void transActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transActionPerformed
     try {
         // TODO add your handling code here:
         new UserTransactions(userID).setVisible(true);
         this.dispose();
     } catch (SQLException ex) {
         Logger.getLogger(DatabaseForm.class.getName()).log(Level.SEVERE, null, ex);
     }
    }//GEN-LAST:event_transActionPerformed

    private void newBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newBtnActionPerformed
        firstNameText.setEnabled(true);
        lastNameText.setEnabled(true);
        userNameText.setEnabled(true);
        jPasswordField1.setEnabled(true);
        editPic.setEnabled(true);
        jTable1.clearSelection();
        pictureViewer.setIcon(null);
        pictureViewer.setText("No Image Selected");
        newBtn.setEnabled(false);
        saveBtn.setEnabled(true);
        firstNameText.setText("");
        lastNameText.setText("");
        userNameText.setText("");
        jPasswordField1.setText("");
        
        trans.setEnabled(false);
        updateBtn.setEnabled(false);
        cancelBtn.setEnabled(true);
        deleteBtn.setEnabled(false);
        newClick= true;  
    }//GEN-LAST:event_newBtnActionPerformed

    private void minimizeButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizeButtonMouseClicked
        // TODO add your handling code here:
        this.setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_minimizeButtonMouseClicked

    private void exitButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitButtonMouseClicked
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_exitButtonMouseClicked

    private void editPicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editPicActionPerformed
        // TODO add your handling code here:
        withPic = true;
        imageHandler img = new imageHandler();
        imgPath = img.browseImage(pictureViewer);
    }//GEN-LAST:event_editPicActionPerformed

    private void jPasswordField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPasswordField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jPasswordField1ActionPerformed

    private void returnBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnBtnActionPerformed
        // TODO add your handling code here:
        new loginform().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_returnBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DatabaseForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DatabaseForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DatabaseForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DatabaseForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new DatabaseForm().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(DatabaseForm.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelBtn;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JButton editPic;
    private javax.swing.JLabel exitButton;
    private javax.swing.JTextField firstNameText;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField lastNameText;
    private javax.swing.JLabel minimizeButton;
    private javax.swing.JButton newBtn;
    private javax.swing.JLabel pictureViewer;
    private javax.swing.JButton returnBtn;
    private javax.swing.JButton saveBtn;
    private javax.swing.JButton trans;
    private javax.swing.JButton updateBtn;
    private javax.swing.JTextField userNameText;
    // End of variables declaration//GEN-END:variables
}
